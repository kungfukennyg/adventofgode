#!/bin/bash
set -e

session="${AOC_SESSION_TOKEN}"
if [[ -z "${session}" ]];
then
  echo "aoc: $AOC_SESSION_TOKEN must be set. Get a token from your browser local storage after authenticating at https://adventofcode.com"
  exit 1
fi

# year and specific day to setup
year=$1
day=$2
input_flag=$3
if [[ -z "${day}" ]] || [[ -z "${year}" ]];
then
  echo "usage: ./aoc <year> <day>."
  printf "\n\t--input: optional, retrieve the problem input"
  exit 2
fi

# validate problem actually exists
url="https://adventofcode.com/${year}/day/${day}"
curl -I --fail-with-body --silent --output /dev/null --show-error "${url}"

if [[ "${input_flag}" = "--input" ]];
then
  file="${year}/day${day}/input.txt"
  if [ -f "${file}" ];
  then
    echo "aoc: ${file} already exists."
    exit 65
  fi

  # read input file and trim trailing new line
  curl --cookie "session=${session}" "${url}/input" | perl -pe 'chomp if eof' >> "${file}"
  exit 0
fi
# setup year and day dirs
if [[ ! -d "${year}" ]];
then
  mkdir "${year}" && cd "$_" || exit 3
else
 cd "${year}"
fi

mkdir "day${day}"
cd "$_"

# basic go files
cat << EOF > main.go
package day${day}

import "github.com/kungfukennyg/adventofgode/aoc"

func parse(input string) {
    for _, line := range aoc.Lines(input) {
        
    }
}

EOF
cat << EOF > main_test.go
package day${day}

EOF
